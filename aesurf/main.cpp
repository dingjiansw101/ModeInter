/************************************************
描述：

    用于获得 aesurf.dat 文件的程序。以matlab导出
的 mode_in.dat 文件为输入，生成符合 CFL3D 程序所
需格式的振型文件。
    （仅适用于每个 block 一个 aesurf 的情况）

    mode_in.dat 格式
        do 1 to nblock
            do 1 to naesurf

                !J0 surface
                do 1 to nseg
                    do ist to ied
                        do jst to jed

                            do 1 to nmode
                                !...
                            enddo

                        enddo
                    enddo
                enddo

                !Jdim surface

                !...


            enddo
        enddo

    aesurf.dat 格式

        do 1 to nblock
            do 1 to naesrf

                do 1 to nmode

                    !J0 surface
                    do 1 to nseg
                        do ist to ied
                            do jst to jed
                                !...
                            enddo
                        enddo
                    enddo

                    !Jdim surface

                    !...

                enddo

            enddo
        enddo

作者：
    LX

日期：

    2017.4.19
*************************************************/

#include "BLOCK.hpp"

#include <cstdio>
#include <iostream>

using namespace std;

int main()
{
    const int nblock = 105;
    const int nmode = 5;
    //int size_a[nblock] = {2116, 2116, 322, 322, 322};
    int size_a[] = {369, 1189, 1189, 153, 493, 493, 117, 377, 377, 153, 153, 153, 117, 377, 377,
 153, 493, 493, 189, 117, 273, 189, 189, 117, 273, 189, 637, 637, 2401, 2401,
  369, 697, 697, 153, 289, 289, 117, 221, 221, 169, 637, 637, 81, 153, 637, 117,
   441, 81, 153, 637, 117, 441, 117, 221, 221, 169, 637, 637, 153, 289, 289, 169,
    637, 637, 637, 169, 117, 297, 117, 117, 297, 117, 169, 169, 1525, 793, 325, 325,
     549, 225, 225, 1281, 525, 525, 1769, 725, 725, 1421, 1225, 3234, 3234, 858, 1029,
      1225, 858, 1281, 525, 525, 793, 325, 325, 1525, 1281, 525, 525};
//                            153, 153, 225, 425, 425, 969, 513, 969, 425, 225, 425, 153,
//                             153, 225, 225, 153, 153, 225, 513, 225, 5130, 5130, 810, 810,
//                              81, 81, 513, 513, 225, 225, 1425, 1425, 225, 225, 513, 1425, 1425
//       369, 1189, 1189, 153, 493, 493, 117, 377, 377, 153, 153, 153, 117, 377, 377, 153, 493, 493, 189, 117, 273,
//        189, 189, 117, 273, 189, 637, 637, 2401, 2401, 369, 697, 697, 153, 289, 289, 117, 221, 221, 169, 637, 637,
//         81, 153, 637, 117, 441, 81, 153, 637, 117, 441, 117, 221, 221, 169, 637, 637, 153, 289, 289, 169, 637, 637,
//          637, 169, 117, 297, 117, 117, 297, 117, 169, 169, 1525, 793, 325, 325, 549, 225, 225, 1281, 525, 525, 1769,
//           725, 725, 1421, 1225, 1617, 1617, 1617, 1617, 429, 429, 1029, 1225,
//            429, 429, 1281, 525, 525, 793, 325, 325, 1525, 1281, 525, 525
//369, 1189, 1189, 153, 493, 493, 117, 377, 377, 153, 153, 153, 117, 377, 377,
// 153, 493, 493, 189, 117, 273, 189, 189, 117, 273, 189, 637, 637, 2401, 2401,
//  369, 697, 697, 153, 289, 289, 117, 221, 221, 169, 637, 637, 81, 153, 637, 117,
//   441, 81, 153, 637, 117, 441, 117, 221, 221, 169, 637, 637, 153, 289, 289, 169,
//    637, 637, 637, 169, 117, 297, 117, 117, 297, 117, 169, 169, 1525, 793, 325, 325,
//     549, 225, 225, 1281, 525, 525, 1769, 725, 725, 1421, 1225, 3234, 3234, 858, 1029,
//      1225, 858, 1281, 525, 525, 793, 325, 325, 1525, 1281, 525, 525

    freopen("mode_in.dat", "r", stdin);
    freopen("aesurf.dat", "w", stdout);

    for (int i = 0; i < nblock; i++)
    {
        BLOCK block(nmode, size_a[i]);
        block.readData();
        block.writeData();
        //block.DisData(1);
    }

    fclose(stdin);
    fclose(stdout);

    freopen("dis.dat", "w", stdout);
//    for (int i = 0; i < nblock; i++)
//    {
//
//    }

    return 0;
}
